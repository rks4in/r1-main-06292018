apply plugin: 'maven-publish'

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        maven { url 'http://artifactory-ci.tomtomgroup.com/artifactory/navapp-maven-virtual/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.netflix.nebula:gradle-dependency-lock-plugin:5.0.4'
    }
}

// Load the versions file
project.ext.versions = new Properties()
project.versions.load(new FileInputStream(project.file("versions.properties")))
project.versions += [
    navkit: '+',
    navui: "${versions.navkitRelease}.+",
]

allprojects {
    repositories {
        maven { url 'http://artifactory-ci.tomtomgroup.com/artifactory/navapp-maven-virtual' }
    }

    apply plugin: 'nebula.dependency-lock'

    dependencyLock{
        globalLockFile = 'dependencies.lock'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username "$USERNAME"
                password "$PASSWORD"
            }
            if (rootProject.version.endsWith('-SNAPSHOT')) {
                url "${ARTIFACTORY_BASE_URL}/cs-fca-r1-snapshot"
            } else {
                url "${ARTIFACTORY_BASE_URL}/cs-fca-r1-release"
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId 'R1-NavApp'
            groupId 'com.tomtom.navapp'
            version "$rootProject.version"
            artifact(file("$rootDir/app/build/outputs/apk/debug/app-x86_64-debug.apk")) {
                classifier 'debug-x86'
                extension 'apk'
            }   
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId 'R1-NavApp'
            groupId 'com.tomtom.navapp'
            version "$rootProject.version"
            artifact(file("$rootDir/app/build/outputs/apk/release/app-x86_64-release.apk")) {
                classifier 'release-x86'
                extension 'apk'
            }   
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId 'R1-NavApp'
            groupId 'com.tomtom.navapp'
            version "$rootProject.version"
            artifact(file("$rootDir/app/build/outputs/apk/debug/app-armeabi-v7a-debug.apk")) {
                classifier 'debug-armeabiv7a'
                extension 'apk'
            }   
        }
    }    
    publications {
        maven(MavenPublication) {
            artifactId 'R1-NavApp'
            groupId 'com.tomtom.navapp'
            version "$rootProject.version"
            artifact(file("$rootDir/app/build/outputs/apk/release/app-armeabi-v7a-release.apk")) {
                classifier 'release-armeabiv7a'
                extension 'apk'
            }  
        }
    }
}

// A special way to define local dependencies is required by dependency lock plugin
// because it can not automatically resolve required dependency configuration
// as latest android plugin does
def localDependency(subProject, dependencyPath) {
    subProject.dependencies{
        implementation project(path: dependencyPath, configuration: 'archives')
    }
}